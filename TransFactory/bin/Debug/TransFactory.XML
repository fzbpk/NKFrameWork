<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TransFactory</name>
    </assembly>
    <members>
        <member name="T:NK.Communicate.FTPClient">
            <summary>
            FTP客户端
            </summary>
        </member>
        <member name="M:NK.Communicate.FTPClient.#ctor(System.String)">
            <summary>
            FTP客户端
            </summary>
        </member>
        <member name="M:NK.Communicate.FTPClient.#ctor(System.String,System.Int32,System.String)">
            <summary>
            FTP客户端
            </summary>
            <param name="FTPIP">地址</param>
            <param name="FTPPort">端口</param>
            <param name="UrlRef">地址参数</param>
            <param name="UserName">用户名</param>
            <param name="Password">密码</param>
            <param name="timeout">超时</param>
        </member>
        <member name="M:NK.Communicate.FTPClient.Finalize">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:NK.Communicate.FTPClient.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:NK.Communicate.FTPClient.Dispose(System.Boolean)">
            <summary>
            释放连接
            </summary>
            <param name="disposing">是否释放</param>
        </member>
        <member name="F:NK.Communicate.FTPClient.log">
            <summary>
            错误出现事件，性能参数内DEBUG设置为EVENT有效
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPClient.HasError">
            <summary>
            错误出现事件，性能参数内DEBUG设置为EVENT有效
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPClient.IMode">
            <summary>
            连接方式
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPClient.Connection">
            <summary>
             网络参数,JSON
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPClient.Refer_Prama">
            <summary>
            性能参数
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPClient.IsConnected">
            <summary>
            是否已连接
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPClient.language">
            <summary>
            显示语言
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPClient.User">
            <summary>
            获取用户账户
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPClient.MD5">
            <summary>
            获取或设置是否使用MD5加密
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPClient.HadMD5">
            <summary>
            获取或设置密码是否已加密
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPClient.Key">
            <summary>
            获取或设置密匙
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPClient.StatCode">
            <summary>
            服务器响应代码
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPClient.WelcomeMessage">
            <summary>
            获取响应的欢迎信息
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPClient.StatusDescription">
            <summary>
            响应描述
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPClient.BannerMessage">
            <summary>
            连接信息
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPClient.ExitMessage">
            <summary>
            退出信息
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPClient.LastModified">
            <summary>
            最后操作时间
            </summary>
        </member>
        <member name="M:NK.Communicate.FTPClient.SetAuthor(System.String,System.String)">
            <summary>
            设置认证信息
            </summary>
            <param name="UserName">用户名</param>
            <param name="PassWord">密码</param>
            <returns>错误代码，0成功，-1参数不正，-2密码不能为空</returns>
        </member>
        <member name="M:NK.Communicate.FTPClient.EditPassWord(System.String)">
            <summary>
            重输入密码
            </summary>
            <param name="PassWord">密码</param>
            <returns>错误代码，0成功，-1参数不正，-2密码不能为空</returns>
        </member>
        <member name="M:NK.Communicate.FTPClient.CreatDirectory(System.String)">
            <summary>
            创建目录
            </summary>
            <param name="FolderName">目录名</param>
            <returns>执行结果，FTP返回码</returns>
        </member>
        <member name="M:NK.Communicate.FTPClient.DeleteDirectory(System.String)">
            <summary>
            删除目录
            </summary>
            <param name="FolderName">目录名</param>
            <returns>执行结果，FTP返回码</returns>
        </member>
        <member name="M:NK.Communicate.FTPClient.RenameDirectory(System.String,System.String)">
            <summary>
            重命名目录
            </summary>
            <param name="FolderName">目录名</param>
            <param name="NewFolderName">新文件名</param>
            <returns>执行结果，FTP返回码</returns>
        </member>
        <member name="M:NK.Communicate.FTPClient.ListDirectory(System.String)">
            <summary>
            列出文件目录
            </summary>
            <param name="FolderName">目录名</param>
            <returns>文件名列表</returns>
        </member>
        <member name="M:NK.Communicate.FTPClient.FileSize(System.String,System.String)">
            <summary>
            获取远程文件大小
            </summary>
            <param name="FileName">文件名</param>
            <param name="FolderName">目录名</param>
            <returns>文件大小，字节</returns>
        </member>
        <member name="M:NK.Communicate.FTPClient.DeleteFile(System.String,System.String)">
             <summary>
             删除远程文件
             </summary>
            <param name="FileName">文件名</param>
             <param name="FolderName">目录名</param>
             <returns>执行结果，FTP返回码</returns>
        </member>
        <member name="M:NK.Communicate.FTPClient.UpLoadFile(System.String,System.String,System.String,System.String)">
            <summary>
            上传文件，带断点续传
            </summary>
            <param name="FolderName">目录名</param>
            <param name="FileName">文件名</param>
            <param name="LocalPath">本地路径</param>
            <param name="LocalFile">本地文件名，为空则用FileName</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:NK.Communicate.FTPClient.DownLoadFile(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            下载文件，带断点下载
            </summary>
            <param name="FolderName">目录名</param>
            <param name="FileName">文件名</param>
            <param name="LocalPath">本地路径</param>
            <param name="LocalFile">本地文件名，为空则用FileName</param>
            <param name="BreakPoint">重新下载</param>
            <param name="Checked">是否对比大小</param>
            <param name="BufferSize">缓存大小</param>
            <returns>执行结果</returns>
        </member>
        <member name="T:NK.Communicate.HTTPClient">
            <summary>
            HTTP客户端
            </summary>
        </member>
        <member name="M:NK.Communicate.HTTPClient.#ctor(System.String)">
            <summary>
            HTTP客户端
            </summary>
        </member>
        <member name="M:NK.Communicate.HTTPClient.#ctor(System.String,System.Int32,System.String)">
            <summary>
            HTTP客户端
            </summary>
            <param name="ComPort">端口号</param>
            <param name="ComRate">波特率</param>
        </member>
        <member name="M:NK.Communicate.HTTPClient.Finalize">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:NK.Communicate.HTTPClient.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:NK.Communicate.HTTPClient.Dispose(System.Boolean)">
            <summary>
            释放连接
            </summary>
            <param name="disposing">是否释放</param>
        </member>
        <member name="F:NK.Communicate.HTTPClient.log">
            <summary>
            错误出现事件，性能参数内DEBUG设置为EVENT有效
            </summary>
        </member>
        <member name="F:NK.Communicate.HTTPClient.HasError">
            <summary>
            错误出现事件，性能参数内DEBUG设置为EVENT有效
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPClient.IMode">
            <summary>
            连接方式
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPClient.Connection">
            <summary>
             网络参数,JSON
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPClient.Refer_Prama">
            <summary>
            性能参数
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPClient.IsConnected">
            <summary>
            是否已连接
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPClient.language">
            <summary>
            显示语言
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPClient.CertFile">
            <summary>
            HTTPS用证书路径
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPClient.ProxyUrl">
            <summary>
            代理地址
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPClient.Header">
            <summary>
            HTTP头
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPClient.Host">
            <summary>
            主机
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPClient.ConnectType">
            <summary>
            连接类型
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPClient.Referer">
            <summary>
            引用
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPClient.UserAgent">
            <summary>
            用户参数
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPClient.KeepAlive">
            <summary>
            保持连接
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPClient.TransferEncoding">
            <summary>
            Chunked编码
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPClient.Session">
            <summary>
            是否使用session
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPClient.StatCode">
            <summary>
            服务器响应代码
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPClient.ContentType">
            <summary>
            响应页面类型
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPClient.CharacterSet">
            <summary>
            响应页面字符集
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPClient.ContentEncoding">
            <summary>
            响应页面编码
            </summary>
        </member>
        <member name="M:NK.Communicate.HTTPClient.PostHtml(System.String,System.String)">
            <summary>
            POST数据并获取响应的HTML
            </summary>
            <param name="UrlPath">url相对目录,去除HTTP/HTTPS://XX:YY/?/后的部分</param>
            <param name="Postdata">POST数据</param>
            <returns></returns>
        </member>
        <member name="M:NK.Communicate.HTTPClient.GetHtml(System.String,System.String)">
            <summary>
            Get方式获取HTML
            </summary>
            <param name="UrlPath">url相对目录,去除HTTP/HTTPS://XX:YY/?/后的部分</param>
            <param name="UrlRefData">URL参数</param>
            <returns></returns>
        </member>
        <member name="M:NK.Communicate.HTTPClient.DownLoad(System.String,System.String,System.String,System.Boolean)">
            <summary>
            下载
            </summary>
            <param name="UrlPath">url相对目录,去除HTTP/HTTPS://XX:YY/?/后的部分</param>
            <param name="SavePath">本地路径</param>
            <param name="FileName">文件名</param>
            <param name="BreakPoint">断点下载</param>
            <returns></returns>
        </member>
        <member name="M:NK.Communicate.HTTPClient.UpLoad(System.String,System.String,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="UrlPath">url相对目录,去除HTTP/HTTPS://XX:YY/?/后的部分</param>
            <param name="FileFullName">完整路径名</param>
            <param name="ServerName">服务器保存文件名</param>
            <returns></returns>
        </member>
        <member name="M:NK.Communicate.HTTPClient.ClearSession">
            <summary>
            清除SESSION
            </summary>
        </member>
        <member name="T:NK.Communicate.SocketClient">
            <summary>
            Socket客户端
            </summary>
        </member>
        <member name="M:NK.Communicate.SocketClient.#ctor">
            <summary>
            Socket客户端
            </summary>
        </member>
        <member name="M:NK.Communicate.SocketClient.#ctor(System.String)">
            <summary>
            Socket客户端
            </summary>
        </member>
        <member name="M:NK.Communicate.SocketClient.Finalize">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:NK.Communicate.SocketClient.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:NK.Communicate.SocketClient.Dispose(System.Boolean)">
            <summary>
            释放连接
            </summary>
            <param name="disposing">是否释放</param>
        </member>
        <member name="E:NK.Communicate.SocketClient.log">
             <summary>
            调试信息事件
             </summary>
        </member>
        <member name="E:NK.Communicate.SocketClient.Connectlog">
            <summary>
            连接调试信息
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketClient.HasError">
            <summary>
            错误出现事件，性能参数内DEBUG设置为EVENT有效
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketClient.Connect">
            <summary>
            连接事件
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketClient.DisConnect">
            <summary>
            连接断开
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketClient.RequestInit">
            <summary>
            请求注册事件
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketClient.ResponseInit">
            <summary>
            返回注册事件
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketClient.RequestData">
            <summary>
            请求数据事件
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketClient.ResponsetData">
            <summary>
            返回数据事件
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketClient.ReceiveData">
            <summary>
            接收到数据
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketClient.RequestHeartBeat">
            <summary>
            请求心跳事件
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketClient.ResponeHeartBeat">
            <summary>
            返回心跳事件
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketClient.RequestFlags">
            <summary>
            请求获取FLAGS
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketClient.ResponseFlags">
            <summary>
            返回Flags
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketClient.RequestCMD">
            <summary>
            请求命令
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketClient.ResponseCMD">
            <summary>
            返回命令
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketClient.IMode">
            <summary>
            连接方式
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketClient.Connection">
            <summary>
             网络参数,JSON
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketClient.Refer">
            <summary>
            性能参数
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketClient.KeepAlive">
            <summary>
            是否已连接
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketClient.IsRuning">
            <summary>
            是否运行
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketClient.HeartBeatTime">
            <summary>
            心跳时间
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketClient.InquiryTime">
            <summary>
            查询时间
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketClient.language">
            <summary>
            显示语言
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketClient.FlagCount">
            <summary>
            标识获取次数
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketClient.RegeditCount">
            <summary>
            注册执行次数
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketClient.HeartBeatCount">
            <summary>
            心跳执行次数
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketClient.DataCount">
            <summary>
            获取数据执行次数
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketClient.CheckTime">
            <summary>
            SOCKET检测时间，分钟
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketClient.IntegralPoint">
            <summary>
            整点数据
            </summary>
        </member>
        <member name="M:NK.Communicate.SocketClient.Start">
            <summary>
            连接
            </summary>
        </member>
        <member name="M:NK.Communicate.SocketClient.Stop">
            <summary>
            断开连接
            </summary>
        </member>
        <member name="M:NK.Communicate.SocketClient.IO(System.String,System.Byte[])">
            <summary>
            数据写入读取
            </summary>
             <param name="flags">标识</param>
            <param name="Data">数据</param>
            <returns></returns>
        </member>
        <member name="M:NK.Communicate.SocketClient.ClearSession(System.String)">
            <summary>
            清除SESSION
            </summary>
            <param name="flags">标识</param>
        </member>
        <member name="M:NK.Communicate.SocketClient.GetSession(System.String)">
            <summary>
            获取SESSION
            </summary>
            <param name="flags">标识</param>
            <returns></returns>
        </member>
        <member name="M:NK.Communicate.SocketClient.SetSession(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            设置SESSION
            </summary>
            <param name="flags">标识</param>
            <param name="session">Session</param>
            <returns></returns>
        </member>
        <member name="P:NK.Communicate.SocketClient.Online">
            <summary>
            连接在线状态
            </summary>
        </member>
        <member name="T:NK.Communicate.UartClient">
            <summary>
            串口客户端
            </summary>
        </member>
        <member name="M:NK.Communicate.UartClient.#ctor">
            <summary>
            串口客户端
            </summary>
        </member>
        <member name="M:NK.Communicate.UartClient.#ctor(System.String)">
            <summary>
            串口客户端
            </summary>
        </member>
        <member name="M:NK.Communicate.UartClient.Finalize">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:NK.Communicate.UartClient.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:NK.Communicate.UartClient.Dispose(System.Boolean)">
            <summary>
            释放连接
            </summary>
            <param name="disposing">是否释放</param>
        </member>
        <member name="E:NK.Communicate.UartClient.log">
             <summary>
            调试信息事件
             </summary>
        </member>
        <member name="E:NK.Communicate.UartClient.Connectlog">
            <summary>
            连接调试信息
            </summary>
        </member>
        <member name="E:NK.Communicate.UartClient.HasError">
            <summary>
            错误出现事件，性能参数内DEBUG设置为EVENT有效
            </summary>
        </member>
        <member name="E:NK.Communicate.UartClient.Connect">
            <summary>
            连接事件
            </summary>
        </member>
        <member name="E:NK.Communicate.UartClient.DisConnect">
            <summary>
            连接断开
            </summary>
        </member>
        <member name="E:NK.Communicate.UartClient.RequestInit">
            <summary>
            请求注册事件
            </summary>
        </member>
        <member name="E:NK.Communicate.UartClient.ResponseInit">
            <summary>
            返回注册事件
            </summary>
        </member>
        <member name="E:NK.Communicate.UartClient.RequestData">
            <summary>
            请求数据事件
            </summary>
        </member>
        <member name="E:NK.Communicate.UartClient.ResponsetData">
            <summary>
            返回数据事件
            </summary>
        </member>
        <member name="E:NK.Communicate.UartClient.ReceiveData">
            <summary>
            接收到数据
            </summary>
        </member>
        <member name="E:NK.Communicate.UartClient.RequestHeartBeat">
            <summary>
            请求心跳事件
            </summary>
        </member>
        <member name="E:NK.Communicate.UartClient.ResponeHeartBeat">
            <summary>
            返回心跳事件
            </summary>
        </member>
        <member name="E:NK.Communicate.UartClient.RequestFlags">
            <summary>
            请求获取FLAGS
            </summary>
        </member>
        <member name="E:NK.Communicate.UartClient.ResponseFlags">
            <summary>
            返回Flags
            </summary>
        </member>
        <member name="E:NK.Communicate.UartClient.RequestCMD">
            <summary>
            请求命令
            </summary>
        </member>
        <member name="E:NK.Communicate.UartClient.ResponseCMD">
            <summary>
            返回命令
            </summary>
        </member>
        <member name="P:NK.Communicate.UartClient.IMode">
            <summary>
            连接方式
            </summary>
        </member>
        <member name="P:NK.Communicate.UartClient.Connection">
            <summary>
             网络参数,JSON
            </summary>
        </member>
        <member name="P:NK.Communicate.UartClient.Refer">
            <summary>
            性能参数
            </summary>
        </member>
        <member name="P:NK.Communicate.UartClient.KeepAlive">
            <summary>
            是否已连接
            </summary>
        </member>
        <member name="P:NK.Communicate.UartClient.IsRuning">
            <summary>
            是否运行
            </summary>
        </member>
        <member name="P:NK.Communicate.UartClient.HeartBeatTime">
            <summary>
            心跳时间
            </summary>
        </member>
        <member name="P:NK.Communicate.UartClient.InquiryTime">
            <summary>
            查询时间
            </summary>
        </member>
        <member name="P:NK.Communicate.UartClient.language">
            <summary>
            显示语音
            </summary>
        </member>
        <member name="P:NK.Communicate.UartClient.FlagCount">
            <summary>
            标识获取次数
            </summary>
        </member>
        <member name="P:NK.Communicate.UartClient.RegeditCount">
            <summary>
            注册执行次数
            </summary>
        </member>
        <member name="P:NK.Communicate.UartClient.HeartBeatCount">
            <summary>
            心跳执行次数
            </summary>
        </member>
        <member name="P:NK.Communicate.UartClient.DataCount">
            <summary>
            获取数据执行次数
            </summary>
        </member>
        <member name="P:NK.Communicate.UartClient.IntegralPoint">
            <summary>
            整点数据
            </summary>
        </member>
        <member name="M:NK.Communicate.UartClient.Start">
            <summary>
            连接
            </summary>
        </member>
        <member name="M:NK.Communicate.UartClient.Stop">
            <summary>
            断开连接
            </summary>
        </member>
        <member name="M:NK.Communicate.UartClient.IO(System.String,System.Byte[])">
            <summary>
            数据写入读取
            </summary>
             <param name="flags">标识</param>
            <param name="Data">数据</param>
            <returns></returns>
        </member>
        <member name="M:NK.Communicate.UartClient.ClearSession(System.String)">
            <summary>
            清除SESSION
            </summary>
            <param name="flags">标识</param>
        </member>
        <member name="M:NK.Communicate.UartClient.GetSession(System.String)">
            <summary>
            获取SESSION
            </summary>
            <param name="flags">标识</param>
            <returns></returns>
        </member>
        <member name="M:NK.Communicate.UartClient.SetSession(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            设置SESSION
            </summary>
            <param name="flags">标识</param>
            <param name="session">Session</param>
            <returns></returns>
        </member>
        <member name="P:NK.Communicate.UartClient.Online">
            <summary>
            连接在线状态
            </summary>
        </member>
        <member name="T:NK.Communicate.FTPServer">
            <summary>
            FTP服务
            </summary>
        </member>
        <member name="E:NK.Communicate.FTPServer.log">
            <summary>
            错误事件
            </summary>
        </member>
        <member name="E:NK.Communicate.FTPServer.HasError">
            <summary>
            错误事件
            </summary>
        </member>
        <member name="E:NK.Communicate.FTPServer.Connect">
            <summary>
            数据库连接成功事件
            </summary>
        </member>
        <member name="E:NK.Communicate.FTPServer.DisConnect">
            <summary>
            数据库关闭事件
            </summary>
        </member>
        <member name="F:NK.Communicate.FTPServer.IsValidDir">
            <summary>
            
            </summary>
        </member>
        <member name="F:NK.Communicate.FTPServer.FTPAuth">
            <summary>
            
            </summary>
        </member>
        <member name="F:NK.Communicate.FTPServer.RequestMKD">
            <summary>
            
            </summary>
        </member>
        <member name="F:NK.Communicate.FTPServer.RequestRNTO">
            <summary>
            
            </summary>
        </member>
        <member name="F:NK.Communicate.FTPServer.RequestAPPE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NK.Communicate.FTPServer.RequsetDELE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NK.Communicate.FTPServer.RequestRMD">
            <summary>
            
            </summary>
        </member>
        <member name="F:NK.Communicate.FTPServer.RequestSTOR">
            <summary>
            
            </summary>
        </member>
        <member name="F:NK.Communicate.FTPServer.RequestRETR">
            <summary>
            
            </summary>
        </member>
        <member name="F:NK.Communicate.FTPServer.RequestPWD">
            <summary>
            
            </summary>
        </member>
        <member name="F:NK.Communicate.FTPServer.RequestLIST">
            <summary>
            
            </summary>
        </member>
        <member name="F:NK.Communicate.FTPServer.RequestSIZE">
            <summary>
            
            </summary>
        </member>
        <member name="F:NK.Communicate.FTPServer.RequsetNLST">
            <summary>
            
            </summary>
        </member>
        <member name="M:NK.Communicate.FTPServer.#ctor(System.String)">
            <summary>
             FTP服务
            </summary>
        </member>
        <member name="M:NK.Communicate.FTPServer.#ctor(System.String,System.Int32,System.String)">
            <summary>
            FTP服务
            </summary>
            <param name="IP"></param>
            <param name="Port"></param>
            <param name="rootpath"></param>
        </member>
        <member name="M:NK.Communicate.FTPServer.Finalize">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:NK.Communicate.FTPServer.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:NK.Communicate.FTPServer.Dispose(System.Boolean)">
            <summary>
            释放连接
            </summary>
            <param name="disposing">是否释放</param>
        </member>
        <member name="P:NK.Communicate.FTPServer.IMode">
            <summary>
            连接方式
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPServer.Connection">
            <summary>
             网络参数,JSON
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPServer.Refer_Prama">
            <summary>
            性能参数
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPServer.IsConnected">
            <summary>
            是否已连接
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPServer.language">
            <summary>
            显示语言
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPServer.Key">
            <summary>
            秘钥
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPServer.MD5">
            <summary>
            是否加密
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPServer.Check">
            <summary>
            是否密码验证
            </summary>
        </member>
        <member name="P:NK.Communicate.FTPServer.RootPath">
            <summary>
            匿名主目录
            </summary>
        </member>
        <member name="M:NK.Communicate.FTPServer.Start">
            <summary>
            启动
            </summary>
        </member>
        <member name="M:NK.Communicate.FTPServer.Stop">
             <summary>
            停止
             </summary>
        </member>
        <member name="M:NK.Communicate.FTPServer.State">
            <summary>
            获取运行状态
            </summary>
            <returns>运行状态</returns>
        </member>
        <member name="M:NK.Communicate.FTPServer.RemoveSession(System.Int64)">
             <summary>
            用户退出
             </summary>
             <param name="session">Session ?supprimer</param>
        </member>
        <!-- 对于成员“M:NK.Communicate.FtpSession.#ctor(System.String,System.Net.Sockets.Socket,NK.Communicate.FTPServer,System.Int64)”忽略有格式错误的 XML 注释 -->
        <member name="M:NK.Communicate.FtpSession.StartProcessing">
             <summary>
            启动函数
             </summary>
        </member>
        <member name="M:NK.Communicate.FtpSession.Close">
            <summary>
            关闭函数
            </summary>
        </member>
        <member name="T:NK.Communicate.HTTPServer">
            <summary>
            HTTP服务
            </summary>
        </member>
        <member name="T:NK.Communicate.HTTPServer.AuthenticationSchemeForClient">
            <summary>
            认证策略
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:NK.Communicate.HTTPServer.#ctor(System.String)">
            <summary>
            HTTP服务
            </summary>
        </member>
        <member name="M:NK.Communicate.HTTPServer.#ctor(System.String,System.Int32,System.String)">
            <summary>
            HTTP服务
            </summary>
        </member>
        <member name="M:NK.Communicate.HTTPServer.Finalize">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:NK.Communicate.HTTPServer.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:NK.Communicate.HTTPServer.Dispose(System.Boolean)">
            <summary>
            释放连接
            </summary>
            <param name="disposing">是否释放</param>
        </member>
        <member name="E:NK.Communicate.HTTPServer.log">
            <summary>
            错误事件
            </summary>
        </member>
        <member name="E:NK.Communicate.HTTPServer.HasError">
            <summary>
            错误事件
            </summary>
        </member>
        <member name="E:NK.Communicate.HTTPServer.ErrorEvent">
            <summary>
            500事件
            </summary>
        </member>
        <member name="E:NK.Communicate.HTTPServer.getEvent">
            <summary>
            错误事件
            </summary>
        </member>
        <member name="E:NK.Communicate.HTTPServer.postEvent">
            <summary>
            错误事件
            </summary>
        </member>
        <member name="E:NK.Communicate.HTTPServer.putEvent">
            <summary>
            错误事件
            </summary>
        </member>
        <member name="E:NK.Communicate.HTTPServer.delEvent">
            <summary>
            错误事件
            </summary>
        </member>
        <member name="E:NK.Communicate.HTTPServer.Connect">
            <summary>
            数据库连接成功事件
            </summary>
        </member>
        <member name="E:NK.Communicate.HTTPServer.DisConnect">
            <summary>
            数据库关闭事件
            </summary>
        </member>
        <member name="E:NK.Communicate.HTTPServer.AuthenticationScheme">
            <summary>
            获取或设置一个委托，调用它来确定用于客户端身份验证的协议
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPServer.IMode">
            <summary>
            连接方式
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPServer.Connection">
            <summary>
             网络参数,JSON
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPServer.Refer_Prama">
            <summary>
            性能参数
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPServer.IsConnected">
            <summary>
            是否已连接
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPServer.language">
            <summary>
            显示语言
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPServer.OPTION">
            <summary>
            是否支持OPTION
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPServer.Access_Control_Allow">
            <summary>
            跨域
            </summary>
        </member>
        <member name="P:NK.Communicate.HTTPServer.Header">
            <summary>
            头信息
            </summary>
        </member>
        <member name="M:NK.Communicate.HTTPServer.Start">
            <summary>
            启动
            </summary>
        </member>
        <member name="M:NK.Communicate.HTTPServer.Stop">
             <summary>
            停止
             </summary>
        </member>
        <member name="M:NK.Communicate.HTTPServer.State">
            <summary>
            获取运行状态
            </summary>
            <returns>运行状态</returns>
        </member>
        <member name="T:NK.Communicate.SocketServer">
            <summary>
            Socket服务
            </summary>
        </member>
        <member name="M:NK.Communicate.SocketServer.#ctor">
            <summary>
            Socket服务
            </summary>
        </member>
        <member name="M:NK.Communicate.SocketServer.#ctor(System.String)">
            <summary>
            Socket服务
            </summary>
        </member>
        <member name="M:NK.Communicate.SocketServer.Finalize">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:NK.Communicate.SocketServer.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:NK.Communicate.SocketServer.Dispose(System.Boolean)">
            <summary>
            释放连接
            </summary>
            <param name="disposing">是否释放</param>
        </member>
        <member name="P:NK.Communicate.SocketServer.IMode">
            <summary>
            连接方式
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketServer.Connection">
            <summary>
             网络参数及对应性能,JSON
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketServer.Refer">
            <summary>
            性能参数
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketServer.KeepAlive">
            <summary>
            是否保持连接
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketServer.IsRuning">
            <summary>
            是否已连接
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketServer.HeartBeatTime">
            <summary>
            心跳时间
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketServer.InquiryTime">
            <summary>
            查询时间
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketServer.language">
            <summary>
            显示语言
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketServer.FlagCount">
            <summary>
            标识获取次数
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketServer.RegeditCount">
            <summary>
            注册执行次数
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketServer.HeartBeatCount">
            <summary>
            心跳执行次数
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketServer.DataCount">
            <summary>
            获取数据执行次数
            </summary>
        </member>
        <member name="P:NK.Communicate.SocketServer.IntegralPoint">
            <summary>
            整点数据
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketServer.log">
            <summary>
            调试信息事件
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketServer.Connectlog">
            <summary>
            连接调试信息
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketServer.HasError">
            <summary>
            错误出现事件，性能参数内DEBUG设置为EVENT有效
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketServer.Connect">
            <summary>
            连接事件
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketServer.DisConnect">
            <summary>
            连接断开
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketServer.RequestInit">
            <summary>
            请求注册事件
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketServer.ResponseInit">
            <summary>
            返回注册事件
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketServer.RequestData">
            <summary>
            请求数据事件
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketServer.ResponsetData">
            <summary>
            返回数据事件
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketServer.ReceiveData">
            <summary>
            接收到数据
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketServer.RequestHeartBeat">
            <summary>
            请求心跳事件
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketServer.ResponeHeartBeat">
            <summary>
            返回心跳事件
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketServer.RequestFlags">
            <summary>
            请求获取FLAGS
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketServer.ResponseFlags">
            <summary>
            返回Flags
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketServer.RequestCMD">
            <summary>
            请求命令
            </summary>
        </member>
        <member name="E:NK.Communicate.SocketServer.ResponseCMD">
            <summary>
            返回命令
            </summary>
        </member>
        <member name="M:NK.Communicate.SocketServer.Start">
            <summary>
            连接
            </summary>
        </member>
        <member name="M:NK.Communicate.SocketServer.Stop">
            <summary>
            断开连接
            </summary>
        </member>
        <member name="M:NK.Communicate.SocketServer.IO(System.String,System.Byte[])">
            <summary>
            数据写入读取
            </summary>
             <param name="flags">标识</param>
            <param name="Data">数据</param>
            <returns></returns>
        </member>
        <member name="M:NK.Communicate.SocketServer.ClearSession(System.String)">
            <summary>
            清除SESSION
            </summary>
            <param name="flags">标识</param>
        </member>
        <member name="M:NK.Communicate.SocketServer.GetSession(System.String)">
            <summary>
            获取SESSION
            </summary>
            <param name="flags">标识</param>
            <returns></returns>
        </member>
        <member name="M:NK.Communicate.SocketServer.SetSession(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            设置SESSION
            </summary>
            <param name="flags">标识</param>
            <param name="session">Session</param>
            <returns></returns>
        </member>
        <member name="P:NK.Communicate.SocketServer.Online">
            <summary>
            连接在线状态
            </summary>
        </member>
        <member name="T:NK.Communicate.UartServer">
            <summary>
            串口服务
            </summary>
        </member>
        <member name="M:NK.Communicate.UartServer.#ctor">
            <summary>
            串口服务
            </summary>
        </member>
        <member name="M:NK.Communicate.UartServer.#ctor(System.String)">
            <summary>
            串口服务
            </summary>
        </member>
        <member name="M:NK.Communicate.UartServer.Finalize">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:NK.Communicate.UartServer.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:NK.Communicate.UartServer.Dispose(System.Boolean)">
            <summary>
            释放连接
            </summary>
            <param name="disposing">是否释放</param>
        </member>
        <member name="P:NK.Communicate.UartServer.IMode">
            <summary>
            连接方式
            </summary>
        </member>
        <member name="P:NK.Communicate.UartServer.Connection">
            <summary>
             网络参数及对应性能,JSON
            </summary>
        </member>
        <member name="P:NK.Communicate.UartServer.Refer">
            <summary>
            性能参数
            </summary>
        </member>
        <member name="P:NK.Communicate.UartServer.KeepAlive">
            <summary>
            是否保持连接
            </summary>
        </member>
        <member name="P:NK.Communicate.UartServer.IsRuning">
            <summary>
            是否已连接
            </summary>
        </member>
        <member name="P:NK.Communicate.UartServer.HeartBeatTime">
            <summary>
            心跳时间
            </summary>
        </member>
        <member name="P:NK.Communicate.UartServer.InquiryTime">
            <summary>
            查询时间
            </summary>
        </member>
        <member name="P:NK.Communicate.UartServer.language">
            <summary>
            显示语言
            </summary>
        </member>
        <member name="P:NK.Communicate.UartServer.FlagCount">
            <summary>
            标识获取次数
            </summary>
        </member>
        <member name="P:NK.Communicate.UartServer.RegeditCount">
            <summary>
            注册执行次数
            </summary>
        </member>
        <member name="P:NK.Communicate.UartServer.HeartBeatCount">
            <summary>
            心跳执行次数
            </summary>
        </member>
        <member name="P:NK.Communicate.UartServer.DataCount">
            <summary>
            获取数据执行次数
            </summary>
        </member>
        <member name="P:NK.Communicate.UartServer.IntegralPoint">
            <summary>
            整点数据
            </summary>
        </member>
        <member name="E:NK.Communicate.UartServer.log">
             <summary>
            调试信息事件
             </summary>
        </member>
        <member name="E:NK.Communicate.UartServer.Connectlog">
            <summary>
            连接调试信息
            </summary>
        </member>
        <member name="E:NK.Communicate.UartServer.HasError">
            <summary>
            错误出现事件，性能参数内DEBUG设置为EVENT有效
            </summary>
        </member>
        <member name="E:NK.Communicate.UartServer.Connect">
            <summary>
            连接事件
            </summary>
        </member>
        <member name="E:NK.Communicate.UartServer.DisConnect">
            <summary>
            连接断开
            </summary>
        </member>
        <member name="E:NK.Communicate.UartServer.RequestInit">
            <summary>
            请求注册事件
            </summary>
        </member>
        <member name="E:NK.Communicate.UartServer.ResponseInit">
            <summary>
            返回注册事件
            </summary>
        </member>
        <member name="E:NK.Communicate.UartServer.RequestData">
            <summary>
            请求数据事件
            </summary>
        </member>
        <member name="E:NK.Communicate.UartServer.ResponsetData">
            <summary>
            返回数据事件
            </summary>
        </member>
        <member name="E:NK.Communicate.UartServer.ReceiveData">
            <summary>
            接收到数据
            </summary>
        </member>
        <member name="E:NK.Communicate.UartServer.RequestHeartBeat">
            <summary>
            请求心跳事件
            </summary>
        </member>
        <member name="E:NK.Communicate.UartServer.ResponeHeartBeat">
            <summary>
            返回心跳事件
            </summary>
        </member>
        <member name="E:NK.Communicate.UartServer.RequestFlags">
            <summary>
            请求获取FLAGS
            </summary>
        </member>
        <member name="E:NK.Communicate.UartServer.ResponseFlags">
            <summary>
            返回Flags
            </summary>
        </member>
        <member name="E:NK.Communicate.UartServer.RequestCMD">
            <summary>
            请求命令
            </summary>
        </member>
        <member name="E:NK.Communicate.UartServer.ResponseCMD">
            <summary>
            返回命令
            </summary>
        </member>
        <member name="M:NK.Communicate.UartServer.Start">
            <summary>
            连接
            </summary>
        </member>
        <member name="M:NK.Communicate.UartServer.Stop">
            <summary>
            断开连接
            </summary>
        </member>
        <member name="M:NK.Communicate.UartServer.IO(System.String,System.Byte[])">
            <summary>
            数据写入读取
            </summary>
             <param name="flags">标识</param>
            <param name="Data">数据</param>
            <returns></returns>
        </member>
        <member name="M:NK.Communicate.UartServer.ClearSession(System.String)">
            <summary>
            清除SESSION
            </summary>
            <param name="flags">标识</param>
        </member>
        <member name="M:NK.Communicate.UartServer.GetSession(System.String)">
            <summary>
            获取SESSION
            </summary>
            <param name="flags">标识</param>
            <returns></returns>
        </member>
        <member name="M:NK.Communicate.UartServer.SetSession(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            设置SESSION
            </summary>
            <param name="flags">标识</param>
            <param name="session">Session</param>
            <returns></returns>
        </member>
        <member name="P:NK.Communicate.UartServer.Online">
            <summary>
            连接在线状态
            </summary>
        </member>
    </members>
</doc>
